// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/Anwenya/GeekTime/webook/account/grpc"
	"github.com/Anwenya/GeekTime/webook/account/repository"
	"github.com/Anwenya/GeekTime/webook/account/repository/cache"
	"github.com/Anwenya/GeekTime/webook/account/repository/dao"
	"github.com/Anwenya/GeekTime/webook/account/service"
	"github.com/Anwenya/GeekTime/webook/pkg/ginx"
	"github.com/Anwenya/GeekTime/webook/pkg/grpcx"
	"github.com/Anwenya/GeekTime/webook/pkg/saramax"
)

import (
	_ "github.com/golang-migrate/migrate/v4/database/mysql"
	_ "github.com/golang-migrate/migrate/v4/source/file"
)

// Injectors from wire.go:

func Init() *grpc.AccountServiceServer {
	loggerV1 := InitLogger()
	db := InitDB(loggerV1)
	accountDAO := dao.NewAccountGORMDAO(db)
	cmdable := InitRedis(loggerV1)
	accountCache := cache.NewAccountRedisCache(cmdable)
	accountRepository := repository.NewAccountRepository(accountDAO, accountCache)
	accountService := service.NewAccountService(accountRepository, loggerV1)
	accountServiceServer := grpc.NewAccountServiceServer(accountService)
	return accountServiceServer
}

// wire.go:

type App struct {
	server      *grpcx.Server
	consumers   []saramax.Consumer
	adminServer *ginx.Server
}
